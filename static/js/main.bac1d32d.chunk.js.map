{"version":3,"sources":["services/api.js","components/Card.js","components/CategoriesList.js","components/Home.js","components/ItemCart.js","components/Cart.js","components/ProductDetail.js","components/Checkout.js","App.js","serviceWorker.js","index.js"],"names":["getCategories","a","fetch","callApi","json","resolveResponse","getProductsFromCategoryAndQuery","CATEGORY_ID","QUERY","urlApi","getProductDetail","PRODUCT_ID","Card","passData","e","props","results","getData","itemId","target","id","filter","ele","this","map","element","data-testid","key","title","src","thumbnail","alt","price","to","type","onClick","value","React","Component","CategoriesList","state","data","setState","className","category","name","Home","searchProducts","inputSearch","inputCategory","productsList","productList","renderBySearch","event","rederByCategory","param","getFromHome","onChange","length","ItemCart","increment","prevState","quantity","decrement","Cart","resultRemoveDup","resultCart","resultFiltered","index","indexOf","push","result","item","ProductDetail","renderProductDetail","location","currentLocation","pathname","replace","handleChange","handleSaveButton","preventDefault","localStorage","clear","rating","avaliacao","ratingEmail","ratingText","avaliation","saveLocalStorage","getLocalStorage","avaliationLocalStorage","getItem","parse","JSON","teste","stringify","setItem","placeholder","htmlFor","maxLength","Checkout","App","dataCart","path","exact","render","component","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bac1d32d.chunk.js","sourcesContent":["export async function getCategories() {\n  const urlApi = 'https://api.mercadolibre.com/sites/MLB/categories';\n  const callApi = await fetch(urlApi);\n  const resolveResponse = await callApi.json();\n  return resolveResponse;\n}\n\nexport async function getProductsFromCategoryAndQuery(CATEGORY_ID, QUERY) {\n  // Implemente aqui! Quando o fizer, descomente os parâmetros que essa função recebe\n  const urlApi = `https://api.mercadolibre.com/sites/MLB/search?category=${CATEGORY_ID}&q=${QUERY}`;\n  const callApi = await fetch(urlApi);\n  const resolveResponse = await callApi.json();\n  return resolveResponse;\n}\n\nexport async function getProductDetail(PRODUCT_ID) {\n  const urlApi = `https://api.mercadolibre.com/items/${PRODUCT_ID}`;\n  const callApi = await fetch(urlApi);\n  const resolveResponse = await callApi.json();\n  return resolveResponse;\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Card extends React.Component {\n  passData = (e) => {\n    const { results, getData } = this.props;\n    const itemId = e.target.id;\n    const resultFilterd = results.filter((ele) => ele.id === itemId);\n    getData(resultFilterd);\n  }\n\n  render() {\n    const { results } = this.props;\n    return (\n      <div>\n        { results.map((element) => (\n          <div\n            data-testid=\"product\"\n            key={ element.id }\n          >\n            <span>\n              { element.title }\n            </span>\n            <img src={ element.thumbnail } alt={ element.title } />\n            <span>\n              { element.price }\n            </span>\n            <Link\n              data-testid=\"product-detail-link\"\n              to={ `/onlinestore-react/product/${element.id}` }\n            >\n              Details\n            </Link>\n            <input\n              data-testid=\"product-add-to-cart\"\n              type=\"button\"\n              onClick={ this.passData }\n              id={ element.id }\n              value=\" Add To Cart\"\n            />\n          </div>\n        )) }\n      </div>\n    );\n  }\n}\nCard.propTypes = {\n  results: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getData: PropTypes.func.isRequired,\n};\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getCategories } from '../services/api';\n\nclass CategoriesList extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n    };\n  }\n\n  async componentDidMount() {\n    const getData = await getCategories();\n    this.setState({ data: [...getData] });\n  }\n\n  render() {\n    const { data } = this.state;\n    const { onClick } = this.props;\n    return (\n      <div className=\"container-category\">\n        { data.map((category) => (<input\n          key={ category.id }\n          data-testid=\"category\"\n          type=\"button\"\n          id={ category.id }\n          name=\"inputCategory\"\n          value={ category.name }\n          onClick={ onClick }\n        />)) }\n\n      </div>\n\n    );\n  }\n}\n\nCategoriesList.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default CategoriesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\nimport Card from './Card';\nimport CategoriesList from './CategoriesList';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      inputSearch: '',\n      inputCategory: '',\n      productList: [],\n    };\n  }\n\n  searchProducts = async () => {\n    const { inputSearch, inputCategory } = this.state;\n    const productsList = await\n    getProductsFromCategoryAndQuery(inputCategory, inputSearch);\n    this.setState({ productList: productsList.results });\n  }\n\n  renderBySearch = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  rederByCategory = (event) => {\n    this.setState({ inputCategory: event.target.id }, // mudado para ID\n      () => this.searchProducts());\n  };\n\n  getData = (param) => {\n    const { getFromHome } = this.props;\n    const dataCart = param;\n    getFromHome(dataCart);\n  }\n\n  render() {\n    const { inputSearch, productList } = this.state;\n    return (\n      <div className=\"home\">\n        <header>\n          <Link\n            to=\"/onlinestore-react/cart\"\n            data-testid=\"shopping-cart-button\"\n          >\n            Carrinho\n          </Link>\n          <input\n            type=\"text\"\n            data-testid=\"query-input\"\n            onChange={ this.renderBySearch }\n            value={ inputSearch }\n            name=\"inputSearch\"\n          />\n          <button\n            type=\"button\"\n            data-testid=\"query-button\"\n            onClick={ this.searchProducts }\n          >\n            Pesquisar\n          </button>\n          <h2\n            data-testid=\"home-initial-message\"\n          >\n            Digite algum termo de pesquisa ou escolha uma categoria.\n          </h2>\n\n        </header>\n        <div className=\"containerCategory\">\n          <div className=\"categorias\">\n\n            <CategoriesList onClick={ this.rederByCategory } />\n          </div>\n          <div className=\"products\">\n            { productList.length === 0\n              ? <p> Nenhum produto foi encontrado </p>\n              : (\n                <Card\n                  results={ productList }\n                  getData={ this.getData }\n                />\n              )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nHome.propTypes = {\n  getFromHome: PropTypes.func.isRequired,\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ItemCart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      quantity: 1,\n    };\n  }\n\n  increment = () => {\n    this.setState((prevState) => ({\n      quantity: prevState.quantity + 1,\n    }));\n  }\n\n  decrement = () => {\n    const { quantity } = this.state;\n    if (quantity <= 1) return this.setState({ quantity: 1 });\n    this.setState((prevState) => ({\n      quantity: prevState.quantity - 1,\n    }));\n  }\n\n  render() {\n    const { title, price } = this.props;\n    const { quantity } = this.state;\n    return (\n      <div data-testid=\"shopping-cart-product-name\">\n        <h3>{ `${title},${price}` }</h3>\n        <p data-testid=\"shopping-cart-product-quantity\">\n          <span>{ quantity }</span>\n          <input\n            type=\"submit\"\n            data-testid=\"product-increase-quantity\"\n            onClick={ this.increment }\n            value=\"+\"\n          />\n          <input\n            type=\"submit\"\n            data-testid=\"product-decrease-quantity\"\n            onClick={ this.decrement }\n            value=\"-\"\n          />\n        </p>\n      </div>\n    );\n  }\n}\n\nItemCart.propTypes = {\n  title: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n};\n\nexport default ItemCart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport ItemCart from './ItemCart';\n\nclass Cart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      resultCart: [],\n    };\n  }\n\n  componentDidMount() {\n    const { result } = this.props;\n    this.setState({ resultCart: result });\n  }\n\n  resultRemoveDup = (resultCart) => {\n    const noMagic = -1;\n    const resultFiltered = [];\n    for (let index = 0; index < resultCart.length; index += 1) {\n      if (resultFiltered.indexOf(resultCart[index]) === noMagic) {\n        resultFiltered.push(resultCart[index]);\n      }\n    }\n    return resultFiltered;\n  }\n\n  render() {\n    const { resultCart } = this.state;\n    return (\n      <section>\n        { this.resultRemoveDup(resultCart).map((item) => (\n          <div key={ item.id }>\n            <ItemCart\n              title={ item.title }\n              price={ item.price }\n            />\n\n          </div>\n        )) }\n        <div>\n          <h2 data-testid=\"shopping-cart-empty-message\">\n            Seu carrinho está vazio\n          </h2>\n        </div>\n        <Link\n          to=\"/onlinestore-react/checkout\"\n          data-testid=\"checkout-products\"\n        />\n      </section>\n    );\n  }\n}\n\nCart.propTypes = {\n  result: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default Cart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getProductDetail } from '../services/api';\n\nclass ProductDetail extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      result: [],\n      rating: '',\n      ratingEmail: '',\n      ratingText: '',\n      avaliation: [],\n    };\n  }\n\n  componentDidMount() {\n    this.renderProductDetail();\n    this.getLocalStorage();\n  }\n\nrenderProductDetail = async () => {\n  const { location } = this.props;\n  const currentLocation = location.pathname.replace('/product/', '');\n  const result = await getProductDetail(currentLocation);\n  this.setState({ result });\n}\n\nhandleChange = (e) => {\n  const { target } = e;\n  const { value } = target;\n  const { name } = target;\n  this.setState({ [name]: value });\n}\n\nhandleSaveButton = (e) => {\n  e.preventDefault();\n  localStorage.clear();\n  const { rating, ratingEmail, ratingText } = this.state;\n  const avaliacao = {\n    ratingEmail,\n    rating,\n    ratingText,\n  };\n\n  this.setState((prevState) => ({\n    avaliation: [...prevState.avaliation, avaliacao],\n    ratingEmail: '',\n    ratingText: '',\n  }), () => this.saveLocalStorage());\n}\n\ngetLocalStorage = () => {\n  const avaliationLocalStorage = localStorage.getItem('avaliacoes');\n\n  const parse = JSON.parse(avaliationLocalStorage);\n\n  if (avaliationLocalStorage !== null) {\n    this.setState({ avaliation: parse });\n  }\n}\n\nsaveLocalStorage = () => {\n  const { avaliation } = this.state;\n  const teste = JSON.stringify(avaliation);\n  localStorage.setItem('avaliacoes', teste);\n}\n\n  passData = () => {\n    const { getFromHome } = this.props;\n    const { result } = this.state;\n    getFromHome([result]);\n  };\n\n  render() {\n    const { result, avaliation, ratingText, ratingEmail } = this.state;\n    return (\n      <>\n        <div>\n          <img src={ result.thumbnail } alt={ result.title } />\n          <p data-testid=\"product-detail-name\">{result.title}</p>\n          <p>{result.price }</p>\n          <button\n            data-testid=\"product-detail-add-to-cart\"\n            type=\"button\"\n            onClick={ this.passData }\n            id={ result.id }\n          >\n            Add to Cart\n          </button>\n\n          <Link\n            data-testid=\"shopping-cart-button\"\n            to=\"/onlinestore-react/cart\"\n          >\n            Cart\n          </Link>\n        </div>\n        <div>\n          <h2> Avaliações </h2>\n          <form>\n            <input\n              data-testid=\"product-detail-email\"\n              type=\"email\"\n              placeholder=\"email\"\n              name=\"ratingEmail\"\n              onChange={ this.handleChange }\n              value={ ratingEmail }\n            />\n            <label htmlFor=\"rating\">\n              <input\n                type=\"radio\"\n                value=\"1\"\n                data-testid=\"1-rating\"\n                name=\"rating\"\n                onChange={ this.handleChange }\n              />\n              1\n            </label>\n            <label htmlFor=\"rating\">\n              <input\n                type=\"radio\"\n                value=\"2\"\n                data-testid=\"2-rating\"\n                name=\"rating\"\n                onChange={ this.handleChange }\n              />\n              2\n            </label>\n            <label htmlFor=\"rating\">\n              <input\n                type=\"radio\"\n                value=\"3\"\n                data-testid=\"3-rating\"\n                name=\"rating\"\n                onChange={ this.handleChange }\n              />\n              3\n            </label>\n            <label htmlFor=\"rating\">\n              <input\n                type=\"radio\"\n                value=\"4\"\n                data-testid=\"4-rating\"\n                name=\"rating\"\n                onChange={ this.handleChange }\n              />\n              4\n            </label>\n            <label htmlFor=\"rating\">\n              <input\n                type=\"radio\"\n                value=\"5\"\n                data-testid=\"5-rating\"\n                name=\"rating\"\n                onChange={ this.handleChange }\n              />\n              5\n            </label>\n            <textarea\n              data-testid=\"product-detail-evaluation\"\n              placeholder=\"Escreva sua avaliação\"\n              maxLength=\"2000\"\n              name=\"ratingText\"\n              onChange={ this.handleChange }\n              value={ ratingText }\n            />\n            <button\n              type=\"submit\"\n              data-testid=\"submit-review-btn\"\n              onClick={ this.handleSaveButton }\n            >\n              Enviar avaliação\n            </button>\n          </form>\n          <div>\n            { avaliation.map((item, index) => (\n              <div key={ index }>\n                <p>{ item.rating }</p>\n                <p>{ item.ratingEmail }</p>\n                <p>{ item.ratingText }</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nProductDetail.propTypes = {\n  location: PropTypes.objectOf(PropTypes.string).isRequired,\n  getFromHome: PropTypes.func.isRequired,\n};\n\nexport default ProductDetail;\n","import React from 'react';\n\nclass Checkout extends React.Component {\n  render() {\n    return (\n      <form>\n        <label htmlFor=\"full-name\">\n          Nome Completo:\n          <input\n            type=\"text\"\n            id=\"full-name\"\n            data-testid=\"checkout-fullname\"\n          />\n        </label>\n        <label htmlFor=\"email\">\n          E-mail\n          <input\n            type=\"email\"\n            id=\"email\"\n            data-testid=\"checkout-email\"\n          />\n        </label>\n        <label htmlFor=\"cpf\">\n          CPF:\n          <input\n            type=\"text\"\n            id=\"cpf\"\n            data-testid=\"checkout-cpf\"\n          />\n        </label>\n        <label htmlFor=\"phone\">\n          Telefone:\n          <input\n            type=\"text\"\n            id=\"phone\"\n            data-testid=\"checkout-phone\"\n          />\n        </label>\n        <label htmlFor=\"cep\">\n          CEP:\n          <input\n            type=\"text\"\n            id=\"cep\"\n            data-testid=\"checkout-cep\"\n          />\n          <label htmlFor=\"checkout-address\">\n            Endereço:\n            <input\n              type=\"text\"\n              id=\"checkout-address\"\n              data-testid=\"checkout-address\"\n            />\n          </label>\n        </label>\n        <button type=\"submit\">Concluir</button>\n        {/* botão não tem função */}\n      </form>\n    );\n  }\n}\nexport default Checkout;\n","import React from 'react';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\nimport Home from './components/Home';\nimport Cart from './components/Cart';\nimport ProductDetail from './components/ProductDetail';\nimport Checkout from './components/Checkout';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      result: [],\n    };\n  }\n\n  getFromHome = (param) => {\n    const dataCart = param;\n    this.setState((prevState) => ({\n      result: [...prevState.result, ...dataCart],\n    }));\n  }\n\n  render() {\n    const { result } = this.state;\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/onlinestore-react\" exact>\n            <Home getFromHome={ this.getFromHome } />\n          </Route>\n          <Route path=\"/onlinestore-react/cart\">\n            <Cart result={ result } />\n          </Route>\n          <Route\n            path=\"/onlinestore-react/product/:id\"\n            render={ (props) => (<ProductDetail\n              { ...props }\n              getFromHome={ this.getFromHome }\n            />) }\n          />\n          <Route path=\"/onlinestore-react/checkout\" component={ Checkout } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  \n\n    <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n  \n\n  \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}